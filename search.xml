<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用Arduino IDE中eSPI库驱动TFT、OLED</title>
      <link href="/2023/06/02/ESP_Ard_eSPI/"/>
      <url>/2023/06/02/ESP_Ard_eSPI/</url>
      
        <content type="html"><![CDATA[<h2 id="eSPI库介绍"><a href="#eSPI库介绍" class="headerlink" title="eSPI库介绍"></a>eSPI库介绍</h2><p>eSPI库是用与驱动一系列包含st7789、st7735等驱动芯片的TFT与OLED屏幕，使用Arduino IDE开发时，可以利用该库来让屏幕显示相应需要的信息。<br>与eSPI库类似的还有Adafruit-GFX-Library等，但eSPI库内函数较为简单直观。</p><h2 id="eSPI库使用问题"><a href="#eSPI库使用问题" class="headerlink" title="eSPI库使用问题"></a>eSPI库使用问题</h2><p>由于eSPI库包含了很多型号芯片的驱动程序，故初次使用时自行改变配置来使库与自己的硬件适配，此步较为关键，方法很多，在使用后总结了一个较为简单简便的方法。</p><h2 id="配置方法"><a href="#配置方法" class="headerlink" title="配置方法"></a>配置方法</h2><h3 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h3><p>根据自己驱动芯片的型号，在 <strong>C:\Users\你的用户名\Documents\Arduino\libraries\TFT_eSPI\User_Setups</strong>中找到自己的芯片型号与屏幕分辨率对应的 <strong>.h</strong> 文件，根据界面原定于引脚接线或自行修改。(注意：TFT_eSPI库虽然强大但是并非所有芯片都兼容)</p><h3 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h3><p>在 <strong>C:\Users\你的用户名\Documents\Arduino\libraries\TFT_eSPI</strong> 中找到User_Setup.h文件将其中默认define的芯片型号注释（若不符的话），找到自己相应芯片型号，取消注释<br><img src="/myimg/esp_espi/1.png" class="lazyload placeholder" data-srcset="/myimg/esp_espi/1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="找到相应型号、分辨率文件"></p><h3 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h3><p>在 <strong>C:\Users\你的用户名\Documents\Arduino\libraries\TFT_eSPI</strong> 中找到User_Setup_Select.h文件,注释默认的引用User_Setup.h,后找到自己相应文件，取消注释<br><img src="/myimg/esp_espi/2.png" class="lazyload placeholder" data-srcset="/myimg/esp_espi/2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><h3 id="第四步"><a href="#第四步" class="headerlink" title="第四步"></a>第四步</h3><p>检查接线是否正确，运行例程</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> GCC optimize(<span class="string">&quot;O3&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Arduino.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;TFT_eSPI.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Wire.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">TFT_eSPI tft = <span class="built_in">TFT_eSPI</span>();</span><br><span class="line"><span class="comment">//TFT_eSprite eSprite = TFT_eSprite(&amp;tft);</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    tft.<span class="built_in">init</span>();</span><br><span class="line">    tft.<span class="built_in">setRotation</span>(<span class="number">1</span>);</span><br><span class="line">    tft.<span class="built_in">fillScreen</span>(TFT_BLUE);</span><br><span class="line">    tft.<span class="built_in">initDMA</span>();</span><br><span class="line">    <span class="comment">//eSprite.createSprite(240, 240);</span></span><br><span class="line">    tft.<span class="built_in">setTextFont</span>(<span class="number">1</span>);</span><br><span class="line">    tft.<span class="built_in">setTextColor</span>(TFT_WHITE);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  </span><br><span class="line">    tft.<span class="built_in">setTextFont</span>(<span class="number">1</span>);</span><br><span class="line">    tft.<span class="built_in">setCursor</span>(<span class="number">20</span>, <span class="number">20</span>);</span><br><span class="line">    tft.<span class="built_in">println</span>(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">    <span class="comment">//tft.pushSprite(0, 0);</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查看效果<br><img src="/myimg/esp_espi/3.jpg" class="lazyload placeholder" data-srcset="/myimg/esp_espi/3.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br>成功</p><h2 id="其他效果示例"><a href="#其他效果示例" class="headerlink" title="其他效果示例"></a>其他效果示例</h2><p><img src="/myimg/esp_espi/4.jpg" class="lazyload placeholder" data-srcset="/myimg/esp_espi/4.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="chisato1"><br><img src="/myimg/esp_espi/5.jpg" class="lazyload placeholder" data-srcset="/myimg/esp_espi/5.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="使用GFX库"></p>]]></content>
      
      
      <categories>
          
          <category> ESP32 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ESP32 </tag>
            
            <tag> eSPI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows11中Docker镜像储存位置修改</title>
      <link href="/2023/06/01/docker_change_diskLoct/"/>
      <url>/2023/06/01/docker_change_diskLoct/</url>
      
        <content type="html"><![CDATA[<h1 id="Win11系统下Docker镜像储存位置问题"><a href="#Win11系统下Docker镜像储存位置问题" class="headerlink" title="Win11系统下Docker镜像储存位置问题"></a>Win11系统下Docker镜像储存位置问题</h1><h2 id="问题阐述"><a href="#问题阐述" class="headerlink" title="问题阐述"></a>问题阐述</h2><p>在Windows 11 pro系统中安装Docker时，若使用 <em>wsl2</em> 安装，则将会安装一个适用于Windows的Linux子系统，我的该子系统版本为 Ubuntu 22.04 LTS。而我们的Docker Desktop程序也是基于这个子系统运行的。<br>故在成功安装完成Docker Desktop后，输入指令</p><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker info</span><br></pre></td></tr></table></figure><p>发现显示disk储存位置显示为Linux系统下的目录，对应着Windows系统下的C盘 <strong>用户\AppData\Docker</strong> 中的相关目录<br>在Docker虚拟机中，Docker镜像、容器的有关均在磁盘映像文件中<br><img src="/myimg/Docker_diskLoc/1.png" class="lazyload placeholder" data-srcset="/myimg/Docker_diskLoc/1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Docker储存"><br>因新的wsl、wsl2技术，用户无法在GUI界面直接修改Disk Location<br>故需要手动修改。</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>首先进入关闭Docker，进入终端，输入指令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --list -v</span><br></pre></td></tr></table></figure><p>该指令将会列出当前正在执行的wsl分发<br>确保 <strong>docker-desktop</strong> 与 <strong>docker-desktop-data</strong> 停止运行，若仍有运行，执行指令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl -t ...</span><br></pre></td></tr></table></figure><p>…为相应分发名称。<br>后输入指令备份相关磁盘映像文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wsl --export docker-desktop-data &quot;D:\Docker\docker-desktop-data.tar&quot;</span><br><span class="line">wsl --export docker-desktop &quot;D:\Docker\docker-desktop.tar&quot;</span><br></pre></td></tr></table></figure><p>目录可自定义，然后在自定义目录下创建文件夹 <strong>docker-desktop-data</strong> 与 <strong>docker-desktop</strong><br>后注销原文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wsl --unregister docker-desktop-data</span><br><span class="line">wsl --unregister docker-desktop</span><br></pre></td></tr></table></figure><p>再将其导回wsl，导入自定义目录下的<strong>docker-desktop-data</strong> 与 <strong>docker-desktop</strong>文件夹。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wsl --import docker-desktop-data &quot;D:\docker\docker-desktop-data&quot; &quot;D:\Docekr\docker-desktop-data.tar&quot; --version 2</span><br><span class="line">wsl --import docker-desktop &quot;D:\Docker\docker-desktop&quot; &quot;D:\docker-desktop.tar&quot; --version 2</span><br></pre></td></tr></table></figure><p>注意标注版本 <strong>–version</strong><br>后可拉取一个镜像验证，成功可发现拉去新镜像后C盘大小未变（若出现微小变换可能是因为运行镜像时的动态变化），自定义目录所在磁盘空间减少，修改成功。</p><h2 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h2><p>成功后可将<strong>docker-desktop-data.tar</strong> 与 <strong>docker-desktop.tar</strong> 删除</p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bug </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用STM32F103RCT6获取LD14雷达点云</title>
      <link href="/2023/05/31/LD14/"/>
      <url>/2023/05/31/LD14/</url>
      
        <content type="html"><![CDATA[<h1 id="LD14雷达与STM32F103RCT6"><a href="#LD14雷达与STM32F103RCT6" class="headerlink" title="LD14雷达与STM32F103RCT6"></a>LD14雷达与STM32F103RCT6</h1><h2 id="LD14激光雷达介绍"><a href="#LD14激光雷达介绍" class="headerlink" title="LD14激光雷达介绍"></a>LD14激光雷达介绍</h2><h3 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h3><p>乐动激光雷达LD14共有四个接口，使用1.25mm 连接器与外部系统连接。具体定义与参数见《开发手册》中图。<br><img src="/myimg/LD14/1.png" class="lazyload placeholder" data-srcset="/myimg/LD14/1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="接口定义与参数"><br>在不要求PWM控制雷达转速的情况下可以将PWM接口悬空，默认以6Hz转速旋转。<br>数据通讯采用标准异步串口单向发送，参数如图。<br><img src="/myimg/LD14/2.png" class="lazyload placeholder" data-srcset="/myimg/LD14/2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="UART参数"><br>接线正确稳定工作后，雷达将会自动开始通过串口通信发送数据包。<br><img src="/myimg/LD14/3.jpg" class="lazyload placeholder" data-srcset="/myimg/LD14/3.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="数据包格式"></p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>使用示例讲解数据包，假设其中一组数据包内容如下。<br><img src="/myimg/LD14/4.png" class="lazyload placeholder" data-srcset="/myimg/LD14/4.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="示例"><br>前两个数据分别是起始符与VerLen，为固定值，后两个分别为雷达转速十六进制表达的后八位与前八位。自此开始，是各点测量数据。在一个数据包中，将会有12个点数据，每个点数据又由距离值（前两个数据）与置信度（后一个数据）组成，前两个数据分别是距离值十六进制表示的后八位与前八位。在默认转速下，一个数据包内起始角到终止角约12度，每一个角数据约1度。原始数据由于三角测距原理，需要后续修正。</p><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>LD14使用左手坐标系，旋转中心为坐标原点，旋转角度沿顺时针增大。</p><h2 id="STM32F103RCT6使用"><a href="#STM32F103RCT6使用" class="headerlink" title="STM32F103RCT6使用"></a>STM32F103RCT6使用</h2><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>将STM32F103RCT6的USART3与USART1使能，RCC配置如下<br><img src="/myimg/LD14/5.png" class="lazyload placeholder" data-srcset="/myimg/LD14/5.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br>Clock Configuration HCLK 72 max 配置。</p><h3 id="编程"><a href="#编程" class="headerlink" title="编程"></a>编程</h3><p>借助开发手册与示例，根据三角测速原理，在main文件或usart3文件中进行数据修正与处理。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">USART3_IRQHandler</span><span class="params">(<span class="type">void</span>)</span><span class="comment">//接收ld14雷达数据，一帧47个字节</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">static</span> u8 state = <span class="number">0</span>;<span class="comment">//状态位</span></span><br><span class="line"><span class="type">static</span> u8 crc = <span class="number">0</span>;<span class="comment">//校验和</span></span><br><span class="line"><span class="type">static</span> u8 cnt = <span class="number">0</span>;<span class="comment">//用于一帧12个点的计数</span></span><br><span class="line">u8 temp_data;</span><br><span class="line"><span class="keyword">if</span>(USART_GetITStatus(USART3, USART_IT_RXNE) != RESET) <span class="comment">//接收到数据</span></span><br><span class="line">&#123;  </span><br><span class="line">temp_data=USART_ReceiveData(USART3); </span><br><span class="line">USART_ClearITPendingBit(USART3,USART_IT_RXNE);</span><br><span class="line"><span class="keyword">if</span> (state &gt; <span class="number">5</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(state &lt; <span class="number">42</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(state%<span class="number">3</span> == <span class="number">0</span>)<span class="comment">//一帧数据中的序号为6,9.....39的数据，距离值低8位</span></span><br><span class="line">&#123;</span><br><span class="line">Pack_Data.point[cnt].distance = (u16)temp_data;</span><br><span class="line">state++;</span><br><span class="line">crc = CrcTable[(crc^temp_data) &amp; <span class="number">0xff</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(state%<span class="number">3</span> == <span class="number">1</span>)<span class="comment">//一帧数据中的序号为7,10.....40的数据，距离值高8位</span></span><br><span class="line">&#123;</span><br><span class="line">Pack_Data.point[cnt].distance = ((u16)temp_data&lt;&lt;<span class="number">8</span>)+Pack_Data.point[cnt].distance;</span><br><span class="line">state++;</span><br><span class="line">crc = CrcTable[(crc^temp_data) &amp; <span class="number">0xff</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span><span class="comment">//一帧数据中的序号为8,11.....41的数据，置信度</span></span><br><span class="line">&#123;</span><br><span class="line">Pack_Data.point[cnt].confidence = temp_data;</span><br><span class="line">cnt++;</span><br><span class="line">state++;</span><br><span class="line">crc = CrcTable[(crc^temp_data) &amp; <span class="number">0xff</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span>(state)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">42</span>:</span><br><span class="line">Pack_Data.end_angle = (u16)temp_data;<span class="comment">//结束角度低8位</span></span><br><span class="line">state++;</span><br><span class="line">crc = CrcTable[(crc^temp_data) &amp; <span class="number">0xff</span>];</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">43</span>:</span><br><span class="line">Pack_Data.end_angle = ((u16)temp_data&lt;&lt;<span class="number">8</span>)+Pack_Data.end_angle;<span class="comment">//结束角度高8位</span></span><br><span class="line">state++;</span><br><span class="line">crc = CrcTable[(crc^temp_data) &amp; <span class="number">0xff</span>];</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">44</span>:</span><br><span class="line">Pack_Data.timestamp = (u16)temp_data;<span class="comment">//时间戳低8位</span></span><br><span class="line">state++;</span><br><span class="line">crc = CrcTable[(crc^temp_data) &amp; <span class="number">0xff</span>];</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">45</span>:</span><br><span class="line">Pack_Data.timestamp = ((u16)temp_data&lt;&lt;<span class="number">8</span>)+Pack_Data.timestamp;<span class="comment">//时间戳高8位</span></span><br><span class="line">state++;</span><br><span class="line">crc = CrcTable[(crc^temp_data) &amp; <span class="number">0xff</span>];</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">46</span>:</span><br><span class="line">Pack_Data.crc8 = temp_data;<span class="comment">//雷达传来的校验和</span></span><br><span class="line"><span class="keyword">if</span>(Pack_Data.crc8 == crc)<span class="comment">//校验正确</span></span><br><span class="line">&#123;</span><br><span class="line">receive_cnt++;<span class="comment">//输出接收到正确数据的次数</span></span><br><span class="line">data_process();<span class="comment">//接收到一帧且校验正确可以进行数据处理</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//printf(&quot;666\n&quot;);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">memset</span>(&amp;Pack_Data,<span class="number">0</span>,<span class="keyword">sizeof</span>(Pack_Data));<span class="comment">//清零</span></span><br><span class="line">crc = <span class="number">0</span>;</span><br><span class="line">state = <span class="number">0</span>;</span><br><span class="line">cnt = <span class="number">0</span>;<span class="comment">//复位</span></span><br><span class="line"><span class="keyword">default</span>: <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span>(state)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line"><span class="keyword">if</span>(temp_data == HEADER)<span class="comment">//头固定</span></span><br><span class="line">&#123;</span><br><span class="line">Pack_Data.header = temp_data;</span><br><span class="line">state++;</span><br><span class="line">crc = CrcTable[(crc^temp_data) &amp; <span class="number">0xff</span>];<span class="comment">//开始进行校验</span></span><br><span class="line">&#125; <span class="keyword">else</span> state = <span class="number">0</span>,crc = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="keyword">if</span>(temp_data == LENGTH)<span class="comment">//测量的点数，目前固定</span></span><br><span class="line">&#123;</span><br><span class="line">Pack_Data.ver_len = temp_data;</span><br><span class="line">state++;</span><br><span class="line">crc = CrcTable[(crc^temp_data) &amp; <span class="number">0xff</span>];</span><br><span class="line">&#125; <span class="keyword">else</span> state = <span class="number">0</span>,crc = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">Pack_Data.speed = (u16)temp_data;<span class="comment">//雷达的转速低8位，单位度每秒</span></span><br><span class="line">state++;</span><br><span class="line">crc = CrcTable[(crc^temp_data) &amp; <span class="number">0xff</span>];</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">Pack_Data.speed = ((u16)temp_data&lt;&lt;<span class="number">8</span>)+Pack_Data.speed;<span class="comment">//雷达的转速高8位</span></span><br><span class="line">state++;</span><br><span class="line">crc = CrcTable[(crc^temp_data) &amp; <span class="number">0xff</span>];</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">Pack_Data.start_angle = (u16)temp_data;</span><br><span class="line">state++;</span><br><span class="line">crc = CrcTable[(crc^temp_data) &amp; <span class="number">0xff</span>];</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">Pack_Data.start_angle = ((u16)temp_data&lt;&lt;<span class="number">8</span>)+Pack_Data.start_angle;</span><br><span class="line">state++;</span><br><span class="line">crc = CrcTable[(crc^temp_data) &amp; <span class="number">0xff</span>];</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>: <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="type">void</span> <span class="title function_">data_process</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*for(int i=0;i&lt;12;i=i+1)&#123;</span></span><br><span class="line"><span class="comment">printf(&quot;%u &quot;,Pack_Data.point[i].distance);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">printf(&quot;\n&quot;);*/</span></span><br><span class="line"><span class="type">static</span> <span class="type">uint8_t</span> data_cnt_avoid = <span class="number">0</span>;<span class="comment">//避障模式数组计数变量</span></span><br><span class="line"><span class="type">uint8_t</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="type">float</span> start_angle = Pack_Data.start_angle/<span class="number">100.0</span>;<span class="comment">//开始角度</span></span><br><span class="line"><span class="type">float</span> end_angel = Pack_Data.end_angle/<span class="number">100.0</span>;<span class="comment">//结束角度</span></span><br><span class="line"><span class="keyword">if</span>(start_angle&gt;=<span class="number">360</span>)</span><br><span class="line">start_angle -= <span class="number">360</span>;</span><br><span class="line"><span class="keyword">if</span>(end_angel&gt;=<span class="number">360</span>)</span><br><span class="line">end_angel -= <span class="number">360</span>;</span><br><span class="line"><span class="type">float</span> average_angel;</span><br><span class="line"><span class="keyword">if</span>((start_angle -= <span class="number">180</span>)&lt;<span class="number">0</span>)</span><br><span class="line">start_angle += <span class="number">360</span>;</span><br><span class="line"><span class="keyword">if</span>((end_angel -= <span class="number">180</span>)&lt;<span class="number">0</span>)</span><br><span class="line">end_angel += <span class="number">360</span>;</span><br><span class="line"><span class="keyword">if</span>(start_angle&gt;end_angel) end_angel +=<span class="number">360</span>;</span><br><span class="line">average_angel = (end_angel - start_angle)/<span class="number">11</span>;</span><br><span class="line"><span class="comment">//if((start_angle&gt;250||end_angel&lt;150))</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//for(i=0;i&lt;12;i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//AvoidData[data_cnt_avoid].angle = start_angle + i*average_angel;</span></span><br><span class="line"><span class="comment">//if(AvoidData[data_cnt_avoid].angle&gt;=360)</span></span><br><span class="line"><span class="comment">//AvoidData[data_cnt_avoid].angle -= 360;</span></span><br><span class="line"><span class="comment">//AvoidData[data_cnt_avoid].distance = Pack_Data.point[i].distance;</span></span><br><span class="line"><span class="comment">//if(++data_cnt_avoid == 100)</span></span><br><span class="line"><span class="comment">//data_cnt_avoid = 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="keyword">if</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">12</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">AvoidData[data_cnt_avoid].angle = start_angle + i*average_angel;</span><br><span class="line"><span class="keyword">if</span>(AvoidData[data_cnt_avoid].angle&gt;=<span class="number">360</span>)</span><br><span class="line">AvoidData[data_cnt_avoid].angle -= <span class="number">360</span>;</span><br><span class="line">AvoidData[data_cnt_avoid].distance = Pack_Data.point[i].distance;</span><br><span class="line"><span class="keyword">if</span>(++data_cnt_avoid == <span class="number">100</span>)</span><br><span class="line">data_cnt_avoid = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定义如下结构体</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> __<span class="title">attribute__</span>((<span class="title">packed</span>)) <span class="title">Point_Data</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">u16 distance;<span class="comment">//距离</span></span><br><span class="line">u8 confidence;<span class="comment">//置信度</span></span><br><span class="line"></span><br><span class="line">&#125;LidarPointStructDef;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> __<span class="title">attribute__</span>((<span class="title">packed</span>)) <span class="title">Pack_Data</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">uint8_t</span> header;</span><br><span class="line"><span class="type">uint8_t</span> ver_len;</span><br><span class="line"><span class="type">uint16_t</span> speed;</span><br><span class="line"><span class="type">uint16_t</span> start_angle;</span><br><span class="line">LidarPointStructDef point[POINT_PER_PACK];</span><br><span class="line"><span class="type">uint16_t</span> end_angle;</span><br><span class="line"><span class="type">uint16_t</span> timestamp;</span><br><span class="line"><span class="type">uint8_t</span> crc8;</span><br><span class="line">&#125;LiDARFrameTypeDef;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> __<span class="title">attribute__</span>((<span class="title">packed</span>)) <span class="title">PointDataProcess_</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">uint16_t</span> distance;<span class="comment">//距离</span></span><br><span class="line"><span class="type">float</span> angle;<span class="comment">//角度</span></span><br><span class="line">&#125;PointDataProcessDef;<span class="comment">//经过处理后的数据</span></span><br></pre></td></tr></table></figure><p>在USART1加入处理代码使其满足printf()函数使用</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">if</span> 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> import(__use_no_semihosting)             </span></span><br><span class="line"><span class="comment">//标准库需要的支持函数                 </span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> __<span class="title">FILE</span> </span></span><br><span class="line"><span class="class">&#123;</span> </span><br><span class="line"><span class="type">int</span> handle; </span><br><span class="line"></span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line">FILE __stdout;       </span><br><span class="line"><span class="comment">//定义_sys_exit()以避免使用半主机模式    </span></span><br><span class="line"><span class="type">void</span> _sys_exit(<span class="type">int</span> x) </span><br><span class="line">&#123; </span><br><span class="line">x = x; </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//重定义fputc函数 </span></span><br><span class="line"><span class="type">int</span> <span class="title function_">fputc</span><span class="params">(<span class="type">int</span> ch, FILE *f)</span></span><br><span class="line">&#123;      </span><br><span class="line"><span class="keyword">while</span>((USART1-&gt;SR&amp;<span class="number">0X40</span>)==<span class="number">0</span>);<span class="comment">//循环发送,直到发送完毕   </span></span><br><span class="line">    USART1-&gt;DR = (u8) ch;      </span><br><span class="line"><span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> </span></span><br></pre></td></tr></table></figure><p>初始化、开启各中断后在while中输出Avoid_Data数组即可获得数据。</p><p>通过串口调试助手保存后如图<br><img src="/myimg/LD14/6.png" class="lazyload placeholder" data-srcset="/myimg/LD14/6.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="点云数据"></p><h2 id="Matlab处理点云数据"><a href="#Matlab处理点云数据" class="headerlink" title="Matlab处理点云数据"></a>Matlab处理点云数据</h2><h3 id="编程-1"><a href="#编程-1" class="headerlink" title="编程"></a>编程</h3><p>在Matlab中读取保存好的点云数据</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data1 = fileread(<span class="string">&#x27;Documents.txt&#x27;</span>);</span><br></pre></td></tr></table></figure><p>由于我控制输出流格式，使用正则表达式提取相应数据</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">angle_pattern = <span class="string">&#x27;Angle: ([\d\.]+)&#x27;</span>;</span><br><span class="line">distance_pattern = <span class="string">&#x27;Distance: (\d+)&#x27;</span>;</span><br></pre></td></tr></table></figure><p>转化为数值，注意角度转换为弧度制</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">angle_matches5 = regexp(data5, angle_pattern, <span class="string">&#x27;tokens&#x27;</span>);</span><br><span class="line">distance_matches5 = regexp(data5, distance_pattern, <span class="string">&#x27;tokens&#x27;</span>);</span><br><span class="line">angles5 = <span class="built_in">cellfun</span>(@(x) str2double(x&#123;<span class="number">1</span>&#125;), angle_matches5);</span><br><span class="line">distances5 = <span class="built_in">cellfun</span>(@(x) str2double(x&#123;<span class="number">1</span>&#125;), distance_matches5);</span><br></pre></td></tr></table></figure><p>转化为笛卡尔坐标系，便于多点采样后解决坐标变换问题。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x1 = distances1 .* <span class="built_in">cos</span>(angles1_rad);</span><br><span class="line">y1 = distances1 .* <span class="built_in">sin</span>(angles1_rad);</span><br><span class="line"></span><br><span class="line">x2 = distances2 .* <span class="built_in">cos</span>(angles2_rad)+<span class="number">900</span>;</span><br><span class="line">y2 = distances2 .* <span class="built_in">sin</span>(angles2_rad)+<span class="number">80</span>;</span><br></pre></td></tr></table></figure><p>最后 <strong>plot()</strong> 绘制图像即可<br>效果如下<br><img src="/myimg/LD14/7.png" class="lazyload placeholder" data-srcset="/myimg/LD14/7.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="最终效果"></p><h2 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h2><p>在点云数据保存处理过程中，由于信息传输过快，串口打印有几率出现乱码，Matlab数据处理时有几率出现数据大小运算不相容的状况，可自己编写程序自动化修改数据。</p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><strong>《LD14用户开发手册》</strong><br><strong>《LD14数据手册》</strong><br><a href="https://blog.csdn.net/weixin_45935114/article/details/127379890?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522168555238216800185860114%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=168555238216800185860114&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-127379890-null-null.142%5Ev88%5Econtrol_2,239%5Ev2%5Einsert_chatgpt&utm_term=LD14%E9%9B%B7%E8%BE%BE&spm=1018.2226.3001.4187"><strong>LD14雷达STM32F103C8T6获取LD14激光雷达数据</strong></a></p>]]></content>
      
      
      <categories>
          
          <category> STM32 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> STM32 </tag>
            
            <tag> 嵌入式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo command not found--问题解决</title>
      <link href="/2023/05/31/hexo_npm_problem/"/>
      <url>/2023/05/31/hexo_npm_problem/</url>
      
        <content type="html"><![CDATA[<h2 id="问题阐述"><a href="#问题阐述" class="headerlink" title="问题阐述"></a>问题阐述</h2><p>当尝试用Hexo与Github pages尝试做博客网站时，安装了Node.js与npm后，执行Hexo-cli全局安装命令后，使用 <strong>hexo init</strong> 时，很有可能出现 <em>command not found</em> 的情况<br><img src="/myimg/hexo_bug.png" class="lazyload placeholder" data-srcset="/myimg/hexo_bug.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="hexo报错"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><p>出现 <strong>xxx command not found</strong> 时一般是相应环境变量中缺少相应路径，导致无法找到相应可执行文件，关键词无法使用。<br>由于安装时使用了 <em>-g</em> 全局安装命令，所以Hexo路径一般在Node.js安装路径下的node_global文件夹内，找到相应 hexo_cli 文件夹，发现该文件夹内的bin文件夹中有一个hexo文件(该文件无后缀名)<br><img src="/myimg/bin_folder.png" class="lazyload placeholder" data-srcset="/myimg/bin_folder.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="hexo文件"><br>只需要将此文件夹路径复制，来到系统变量编辑界面下<br><img src="/myimg/hexo_value.png" class="lazyload placeholder" data-srcset="/myimg/hexo_value.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br>再在 <strong>Git Bash</strong> 执行下面代码检查环境是否配置成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><p>显示下列信息等即表示配置成功。<br><img src="/myimg/hexo_solved.png" class="lazyload placeholder" data-srcset="/myimg/hexo_solved.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><h2 id="前期注意事项"><a href="#前期注意事项" class="headerlink" title="前期注意事项"></a>前期注意事项</h2><p>在使用 <em>npm</em> 时尽量在具有管理员权限的终端内执行，否则可能会出现创建文件夹等权限不足报错的情况。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bug </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
